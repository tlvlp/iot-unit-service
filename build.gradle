plugins {
	id 'org.springframework.boot' version '2.2.0.M6'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'com.palantir.docker' version '0.22.1'
	id 'java'
}

group = 'com.tlvlp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
ext {
	mockitoVersion = "3.+"
	projectName = 'iot-unit-service'
	dockerRepo = 'tlvlp'
	mainClass = 'com.tlvlp.iot.server.unit.service.Application'
	servicePort = 8200
}


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation "org.mockito:mockito-core:${mockitoVersion}"
	testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

test {
	useJUnitPlatform()
}

docker {
	name "$dockerRepo/$projectName:$project.version"
	tag "$project.version", "$dockerRepo/$projectName:$project.version"
	tag 'latest', "$dockerRepo/$projectName:latest"
	dependsOn bootJar
	files bootJar.outputs
	dockerfile file('Dockerfile')
	buildArgs([PROJECT: projectName, SERVICE_PORT: servicePort.toString()])
	pull true
	noCache true
}
